{"_id":{"$oid":"5aeed282f18fbd00144c48bd"},"title":"Hello, World 2","body":"<p>Hello, World 2</p>","featured_photo":"http://www.lirent.net/wp-content/uploads/2014/10/Android-Lollipop-wallpapers-p-800x500.png","summary":"Hello World Summary 2","created_at":{"$date":{"$numberLong":"1525600898495"}},"__v":{"$numberInt":"0"}}
{"_id":{"$oid":"5aeed292f18fbd00144c48be"},"title":"Hello, World 3 Happy New Year","body":"<h3 style=\"text-align: left;\"><strong>Changing the world through my blogs</strong></h3>\n<p>Hello World...</p>\n<p>asdasdasd</p>\n<p>asdasd</p>\n<p>asdasd</p>\n<p>&nbsp;asdasd</p>\n<p>asdasd</p>","featured_photo":"http://www.lirent.net/wp-content/uploads/2014/10/Android-Lollipop-wallpapers-p-800x500.png","summary":"Hello World Summary 3, This seems Legit ehh.....","created_at":{"$date":{"$numberLong":"1525600914214"}},"__v":{"$numberInt":"0"}}
{"_id":{"$oid":"5aeed250f18fbd00144c48bc"},"title":"Hello, World","body":"<h2 style=\"margin: 0px 0px 10px; padding: 0px; font-weight: 400; line-height: 24px; font-family: DauphinPlain; font-size: 24px;\">&nbsp;</h2>\n<p style=\"text-align: center;\"><iframe src=\"//www.youtube.com/embed/VYOjWnS4cMY\" width=\"700\" height=\"393\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<h1 style=\"text-align: center;\">Youtube Video</h1>\n<h2 style=\"margin: 0px 0px 10px; padding: 0px; font-weight: 400; line-height: 24px; font-family: DauphinPlain; font-size: 24px;\">Why do we use it?</h2>\n<p style=\"margin: 0px 0px 15px; padding: 0px; text-align: justify; font-family: 'Open Sans', Arial, sans-serif;\">It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).</p>","featured_photo":"https://i.imgur.com/8tIhykK.png","summary":"Hello World Summary","created_at":{"$date":{"$numberLong":"1525600848487"}},"__v":{"$numberInt":"0"}}
{"_id":{"$oid":"5b1663a430a36d00147e1a82"},"is_published":true,"title":"Deploy Angular 6 Project To Live Using Heroku","body":"<p style=\"text-align: center;\">\"Easily deploy your angular project using heroku. Creating your heroku account and deploying your project through CLI. Adding scripts in package.json to build and deploy your project in heroku.\"</p>\n<p style=\"text-align: center;\">&nbsp;</p>\n<p style=\"text-align: center;\"><iframe src=\"//www.youtube.com/embed/hE1i_LhL_Nc?t=38s\" width=\"892\" height=\"500\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<p style=\"text-align: center;\">&nbsp;</p>\n<h3>Create Heroku Account</h3>\n<p>First you need to have a heroku account. You can sign up&nbsp;<a href=\"https://signup.heroku.com/?c=70130000001x9jFAAQ\">here</a>&nbsp;to create an account. Please have a valid email when creating an account because you need to confirm your registration at your email.</p>\n<p>After creating an account you should be able to login and will be redirected to your dashboard.</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://i.imgur.com/XcICrm9.png\" alt=\"Account Dashboard\" width=\"626\" height=\"350\" /></p>\n<p>&nbsp;</p>\n<h3>Create An Angular Project</h3>\n<p>Go to to your working directory and create a new angular project through CLI.</p>\n<p>For this demo i'll be creating a new angular project named <strong>demo-deploy</strong></p>\n<p><strong><img src=\"https://i.imgur.com/THvlVAM.png\" alt=\"CLI Command\" width=\"677\" height=\"37\" /></strong></p>\n<p>After successfully creating your project go to the <strong>demo-deploy</strong> folder by typing in the terminal<strong><em> cd demo-deploy/</em></strong></p>\n<p>and test your application locally type in <em><strong>ng serve&nbsp;</strong></em>and open your browser at&nbsp;<strong><em>http://localhost:4200/</em></strong></p>\n<p style=\"text-align: center;\"><img src=\"https://i.imgur.com/GNYhKm1.png\" alt=\"Angular Application\" width=\"684\" height=\"384\" /></p>\n<p style=\"text-align: left;\">&nbsp;</p>\n<h3 style=\"text-align: left;\">Install Express in Your Angular Project</h3>\n<p>You must be in your project root folder and install express to do that run in your terminal</p>\n<p><em><strong>npm install express --save</strong></em></p>\n<p><em><strong><img src=\"https://i.imgur.com/any4OKf.png\" alt=\"npm install express --save\" width=\"623\" height=\"46\" /></strong></em></p>\n<p>While writing this guide the current version of the express is 4.16.3 it might be different for you.</p>\n<h3>Using Express as Server</h3>\n<p>Create a<em><strong> server.js</strong> </em>file in the root folder of your project.</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://i.imgur.com/j9o5Xrp.png\" alt=\"server.js\" width=\"697\" height=\"436\" /></p>\n<p>In your server.js file copy this code below:</p>\n<pre class=\"language-javascript\"><code>//Install express server\nconst express = require('express');\nconst path = require('path');\n\nconst app = express();\n\n// Serve only the static files form the dist directory\n// Replace the '/dist/&lt;to_your_project_name&gt;'\napp.use(express.static(__dirname + '/dist/demo-deploy'));\n\napp.get('*', function(req,res) {\n  // Replace the '/dist/&lt;to_your_project_name&gt;/index.html'\n  res.sendFile(path.join(__dirname+ '/dist/demo-deploy/index.html'));\n});\n// Start the app by listening on the default Heroku port\napp.listen(process.env.PORT || 8080);\n</code></pre>\n<p><em>*Take note of the&nbsp;<strong>app.use(express.static(__dirname + '/dist/&lt;your_project_name&gt;'));&nbsp;&nbsp;</strong>Replace with the</em></p>\n<p><em>folder name of your project.</em></p>\n<p><em>Do the same with<strong>&nbsp;</strong><strong>res.sendFile(path.join(__dirname+ '/dist/&lt;your_project_name&gt;/index.html'));</strong></em></p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://i.imgur.com/sx3iwgV.png\" alt=\"server code\" width=\"647\" height=\"428\" /></p>\n<p>&nbsp;</p>\n<h3>Configure package.json</h3>\n<p>Go to your <strong>package.json.</strong></p>\n<p>Change the \"<em><strong>start\": \"ng serve\" </strong></em>in the <em><strong>\"scripts: \" {....}&nbsp;</strong></em>to <strong>\"start\": \"node server.js\"&nbsp;</strong>this command will run the</p>\n<p>server.js file through the server.</p>\n<p>Add also in the <strong>script</strong> section&nbsp;<em><strong>\"postinstall\": \"ng build --aot --prod\"</strong></em></p>\n<p style=\"text-align: center;\"><img src=\"https://i.imgur.com/sDODDZZ.png\" alt=\"package.json\" width=\"674\" height=\"298\" /></p>\n<p style=\"text-align: left;\">To know what version of node and npm that needs to be run on the server insert \"<strong>engines\"</strong></p>\n<p style=\"text-align: left;\">Put inside in the <em><strong>engines</strong></em> your<strong><em> node</em></strong> version and <strong><em>npm</em></strong> version</p>\n<p style=\"text-align: left;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://i.imgur.com/4BtLzgy.png\" alt=\"engines\" width=\"424\" height=\"209\" /></p>\n<p style=\"text-align: left;\">To know what version of <em>node</em> and <em>npm</em> you are using type in your terminal <strong>node -v </strong>and<strong> npm -v</strong></p>\n<p style=\"text-align: left;\">Here's what my package.json looks like:</p>\n<pre class=\"language-javascript\"><code>{\n  \"name\": \"demo-deploy\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"node server.js\",\n    \"build\": \"ng build\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\",\n    \"postinstall\": \"ng build --aot --prod\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^6.0.0\",\n    \"@angular/common\": \"^6.0.0\",\n    \"@angular/compiler\": \"^6.0.0\",\n    \"@angular/core\": \"^6.0.0\",\n    \"@angular/forms\": \"^6.0.0\",\n    \"@angular/http\": \"^6.0.0\",\n    \"@angular/platform-browser\": \"^6.0.0\",\n    \"@angular/platform-browser-dynamic\": \"^6.0.0\",\n    \"@angular/router\": \"^6.0.0\",\n    \"core-js\": \"^2.5.4\",\n    \"express\": \"^4.16.3\",\n    \"rxjs\": \"^6.0.0\",\n    \"zone.js\": \"^0.8.26\"\n  },\n  \"devDependencies\": {\n    \"@angular/compiler-cli\": \"^6.0.0\",\n    \"@angular-devkit/build-angular\": \"~0.6.0\",\n    \"typescript\": \"~2.7.2\",\n    \"@angular/cli\": \"~6.0.0\",\n    \"@angular/language-service\": \"^6.0.0\",\n    \"@types/jasmine\": \"~2.8.6\",\n    \"@types/jasminewd2\": \"~2.0.3\",\n    \"@types/node\": \"~8.9.4\",\n    \"codelyzer\": \"~4.2.1\",\n    \"jasmine-core\": \"~2.99.1\",\n    \"jasmine-spec-reporter\": \"~4.2.1\",\n    \"karma\": \"~1.7.1\",\n    \"karma-chrome-launcher\": \"~2.2.0\",\n    \"karma-coverage-istanbul-reporter\": \"~1.4.2\",\n    \"karma-jasmine\": \"~1.1.1\",\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\n    \"protractor\": \"~5.3.0\",\n    \"ts-node\": \"~5.0.1\",\n    \"tslint\": \"~5.9.1\"\n  },\n  \"engines\": {\n    \"node\" : \"~8.9.1\",\n    \"npm\" : \"~6.0.0\"\n  }\n}\n</code></pre>\n<h3 style=\"text-align: left;\">Pushing To Live</h3>\n<p>To finally push your project to live</p>\n<h4>1. Create Heroku Project</h4>\n<p>Open a <strong>new terminal</strong> and create a new heroku project. To do this type in your terminal:</p>\n<p><em><strong>heroku create &lt;project_name&gt;</strong></em></p>\n<p><em><strong><img src=\"https://i.imgur.com/H0r4qTw.png\" alt=\"heroku create\" width=\"1158\" height=\"100\" /></strong></em></p>\n<h4>2. Adding the project to the remote repository</h4>\n<p>Still in your <strong>terminal</strong> locate through your <strong>angular project folder</strong>. In which mine is demo-deploy.</p>\n<p>Then add the remote repository by typing in the terminal:</p>\n<p><em><strong>heroku git:remote -a &lt;project_name&gt;</strong></em></p>\n<p><img src=\"https://i.imgur.com/jEqam2l.png\" alt=\"heroku remote\" width=\"1154\" height=\"63\" /></p>\n<h4>3. Commit and Deploy</h4>\n<p>Commit to your project and push to heroku:</p>\n<p><em><strong>git add .</strong></em></p>\n<p><em><strong>git commit -m 'First Commit'</strong></em></p>\n<p><em><strong>git push heroku master</strong></em></p>\n<p><em><strong><img src=\"https://i.imgur.com/lvlQQ0T.png\" alt=\"pushing to heroku master\" width=\"618\" height=\"114\" /></strong></em></p>\n<p><em>*To view your project in live website just type in the terminal:</em></p>\n<p><strong><em>heroku open</em></strong></p>\n<p><strong><em><img src=\"https://i.imgur.com/7ZK9miS.png\" alt=\"\" width=\"516\" height=\"31\" /></em></strong></p>\n<p>To Know more about creating and deploying projects through heroku you can visit these pages:</p>\n<p><a href=\"https://devcenter.heroku.com/articles/creating-apps\">https://devcenter.heroku.com/articles/creating-apps</a></p>\n<p><a href=\"https://devcenter.heroku.com/articles/git\">https://devcenter.heroku.com/articles/git</a></p>\n<p>&nbsp;</p>\n<p style=\"text-align: center;\"><em>\"Hoping that this guide helped you to deploy your angular projects using heroku\"</em></p>","featured_photo":"https://i.imgur.com/z2Fuw94.png","summary":"Easily deploy your angular project using heroku. Creating your heroku account and deploying your project through CLI. Adding scripts in package.json to build and deploy your project in heroku.","created_at":{"$date":{"$numberLong":"1528193956930"}},"__v":{"$numberInt":"0"}}
{"_id":{"$oid":"5b02df1208a7720014e24696"},"is_published":true,"title":"Deploy Your NodeJS Project Using Heroku","body":"<h2><iframe src=\"//www.youtube.com/embed/xHg7MKchjjo\" width=\"1250\" height=\"700\" allowfullscreen=\"allowfullscreen\"></iframe></h2>\n<h2>Before we get started:</h2>\n<p>I recommend to first install the utilities that had been mentioned in this guide.</p>\n<p><strong>1. Install Express Generator</strong></p>\n<p>To easily create a new nodejs through CLI install express generator. This will help you to setup your nodejs project immediately.</p>\n<p>Here's the link for the Express Generator:&nbsp;<a href=\"https://expressjs.com/en/starter/generator.html\">https://expressjs.com/en/starter/generator.html</a></p>\n<p><strong>2. Install Nodemon</strong></p>\n<p>Nodemon is used to help you to save and run the changes of your nodejs project. So it means that everytime you make changes nodemon will handle the reload for you.</p>\n<p>No more repeatedly running the command <strong>'node &lt;name of the file&gt;'.</strong></p>\n<p>Here's the link for Nodemon:&nbsp;<a href=\"https://nodemon.io/\">https://nodemon.io/</a></p>\n<p><strong>3. Register a Heroku account and install Heroku CLI</strong></p>\n<p>As said from the Heroku website this will help you manange your heroku application and this will make deploying your app to live development much easier.</p>\n<p>Also it's required to have a heroku account so that you can access your projects.</p>\n<p>Here's the link for the Heroku:&nbsp;<a href=\"https://www.heroku.com/\">https://www.heroku.com/</a></p>\n<p>Here's the link for the Heroku CLI:&nbsp;<a href=\"https://devcenter.heroku.com/articles/heroku-cli\">https://devcenter.heroku.com/articles/heroku-cli</a></p>\n<p>&nbsp;</p>\n<h2><strong>Let's begin:</strong></h2>\n<h3><strong>Create a new project</strong></h3>\n<p>First we have to create a new nodejs project. This can be easily done by using a terminal command from the <strong>express generator</strong></p>\n<p>Type in the terminal:</p>\n<p><em><strong>express &lt;name_of_the_project&gt;</strong></em></p>\n<p>For this guide I'll be naming our project to <strong>node-deploy</strong>.</p>\n<p><em><strong><img src=\"https://i.imgur.com/IgYxwrQ.png\" alt=\"create a new project\" width=\"600\" height=\"551\" /></strong></em></p>\n<p>Now go to your project and install dependencies this can be done by:</p>\n<p><strong>cd node-deploy</strong></p>\n<p><strong>npm install</strong></p>\n<p><strong><img src=\"https://i.imgur.com/PftHYkW.png\" alt=\"install dependencies\" width=\"967\" height=\"183\" /></strong></p>\n<h3><strong>Run locally</strong></h3>\n<p>To run and test locally your nodejs project.</p>\n<p>In your project's folder type in the terminal:</p>\n<p><strong>nodemon</strong></p>\n<p><strong><img src=\"https://i.imgur.com/15S4KQ1.png\" alt=\"test local\" width=\"439\" height=\"102\" /></strong></p>\n<p>This can be viewed through:</p>\n<p><strong>http://localhost:3000/</strong></p>\n<p><strong><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://i.imgur.com/yLeWYDr.png\" alt=\"\" width=\"826\" height=\"516\" /></strong></p>\n<h3><strong>Update package.json</strong></h3>\n<p>In your project locate the <strong>package.json</strong> file.</p>\n<p>After the dependecies add the&nbsp;<strong>engines</strong> in your package.json.</p>\n<p>indicate the <strong>node</strong> and <strong>npm</strong> version installed in your system.</p>\n<p><img src=\"https://i.imgur.com/bJ0K97N.png\" alt=\"\" /></p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://i.imgur.com/ayanADC.png\" alt=\"\" width=\"935\" height=\"584\" /></p>\n<p>Here's the code for package.json file:</p>\n<pre class=\"language-javascript\"><code>{\n  \"name\": \"node-deploy\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node ./bin/www\"\n  },\n  \"dependencies\": {\n    \"cookie-parser\": \"~1.4.3\",\n    \"debug\": \"~2.6.9\",\n    \"express\": \"~4.16.0\",\n    \"http-errors\": \"~1.6.2\",\n    \"jade\": \"~1.11.0\",\n    \"morgan\": \"~1.9.0\"\n  },\n  \"engines\": {\n    \"node\": \"~8.9.1\",\n    \"npm\": \"~6.0.0\"\n  }\n}</code></pre>\n<p>To know what version of your node and npm installed.</p>\n<p>You can this type this command in your terminal:</p>\n<p><strong>node -v</strong></p>\n<p><strong>npm -v</strong></p>\n<p>The command will the show the version of your node and npm</p>\n<p><img src=\"https://i.imgur.com/ndO6uwK.png\" alt=\"node and npm version\" width=\"413\" height=\"95\" /></p>\n<h3><strong>Create a Procfile</strong></h3>\n<p>Inside the folder of your project create a new file and name it <strong>Procfile</strong></p>\n<p><strong>*NOTE:&nbsp;</strong><em>The file name is case sensitive you must name the file as Procfile or else it will not work</em>.</p>\n<p>Inside the Procfile put these codes:</p>\n<pre class=\"language-javascript\"><code>web: npm start</code></pre>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://i.imgur.com/lasqZ6g.png\" alt=\"\" width=\"852\" height=\"533\" /></p>\n<p>To Test locally you can run this command in your root folder:</p>\n<p><strong>heroku local</strong></p>\n<p><strong><img src=\"https://i.imgur.com/4SX3sf1.png\" alt=\"heroku local\" width=\"872\" height=\"74\" /></strong></p>\n<p>And your node project is now serving at&nbsp;<strong>http://localhost:5000/</strong></p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://i.imgur.com/1tZ0cbI.png\" alt=\"\" width=\"669\" height=\"418\" /></p>\n<h2><strong>Deploying to Live</strong></h2>\n<h4><strong>Login to your Heroku Account</strong></h4>\n<p>First login to your heroku account through CLI.</p>\n<p>Open a new a terminal and type:</p>\n<p><strong>heroku login</strong></p>\n<p><strong><img src=\"https://i.imgur.com/F5lC0Tl.png\" alt=\"\" width=\"872\" height=\"82\" /></strong></p>\n<p>Enter your email and password.</p>\n<h4><strong>Create a new Heroku Project</strong></h4>\n<p>To create a new heroku project type:</p>\n<p><strong>heroku create &lt;name_of_project&gt;</strong></p>\n<p><strong><img src=\"https://i.imgur.com/slCtyrE.png\" alt=\"heroku create\" width=\"888\" height=\"78\" /></strong></p>\n<h4><strong>Pushing your Project to Heroku</strong></h4>\n<p>Go to your project's folder</p>\n<p><strong>cd node-deploy/</strong></p>\n<p>create a <strong>.gitignore</strong> file in your root folder this will help to push only the needed files to your project.</p>\n<p>The content of my <strong>.gitignore</strong>:</p>\n<pre class=\"language-javascript\"><code># OS X\n.DS_Store*\nIcon?\n._*\n\n# Windows\nThumbs.db\nehthumbs.db\nDesktop.ini\n\n# Linux\n.directory\n*~\n\n\n# npm\nnode_modules\npackage-lock.json\n*.log\n*.gz\n\n\n# Coveralls\ncoverage\n\n# Benchmarking\nbenchmarks/graphs</code></pre>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://i.imgur.com/QXmuXxy.png\" alt=\"gitignore\" width=\"915\" height=\"572\" /></p>\n<p>Type in this command to push your project to your newly created heroku project:</p>\n<p><strong>git init</strong></p>\n<p><strong>heroku git:remote -a &lt;project_name&gt;</strong></p>\n<p><strong>git add .</strong></p>\n<p><strong>git commit -m '&lt;your_commit_message&gt;'</strong></p>\n<p><strong>git push heroku master</strong></p>\n<p><strong><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://i.imgur.com/UetgUEL.png\" alt=\"\" width=\"872\" height=\"294\" /></strong></p>\n<p>To test your newly deployed project type:</p>\n<p><strong>heroku open</strong></p>\n<p><strong><img src=\"https://i.imgur.com/M8EE6Wt.png\" alt=\"\" /></strong></p>\n<p>It will open your browser and redirect to your deployed project.</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://i.imgur.com/wAD0rcJ.png\" alt=\"Deployed Heroku Project\" width=\"1063\" height=\"664\" /></p>\n<h3><strong>Adding Web Dyno on Heroku</strong></h3>\n<p>To add web dyno to your project type:</p>\n<p><strong>heroku ps:scale web=1</strong></p>\n<p><strong><img src=\"https://i.imgur.com/0xsRdpW.png\" alt=\"\" width=\"820\" height=\"61\" /></strong></p>\n<p>We only added 1 dyno for this project. But if you site gets popular or bigger add more dynos</p>\n<p>For more information about Scaling Heroku Web dyno: <a href=\"https://devcenter.heroku.com/articles/scaling\">https://devcenter.heroku.com/articles/scaling</a>&nbsp;</p>","featured_photo":"https://i.imgur.com/uUs5Z8C.png","summary":"Deploy your nodejs project through heroku with express framework. Creating a nodejs project through CLI by using express and nodemon. Using heroku to easily deploy your nodejs project to live through using CLI commands also.","created_at":{"$date":{"$numberLong":"1526914834067"}},"__v":{"$numberInt":"0"}}
